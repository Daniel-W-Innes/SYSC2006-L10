void test_power(double x, int k) {
    printf("Calling power(x, k) with x = %.2f, k = %d\n", x, k);
    printf("Expected result: %.2f\n", pow(x, k));
    printf("Actual result: %.2f\n\n", power(x, k));
}


void test_num_digits(int k, int expected) {
    printf("Calling num_digits(k) with k = %d\n", k);
    printf("Expected result: %d\n", expected);
    printf("Actual result: %d\n\n", num_digits(k));
}

void test_occurrences(int a[], int n, int target, int expected) {
    printf("Calling test_occurrences(int a[], int n, int target) with a = ");
    print_array(a, n);
    printf(", n = %d, target = %d\n", n, target);
    printf("Expected result: %d\n", expected);
    printf("Actual result: %d\n\n", occurrences(a, n, target));
}


void test_power2(double x, int k) {
    printf("Calling power2(x, k) with x = %.2f, k = %d\n", x, k);
    printf("Expected result: %.2f\n", pow(x, k));
    printf("Actual result: %.2f\n\n", power2(x, k));
}

void test_exercise_1(void) {
    /* Test cases that allow us to verify if power() correctly calculates 
     * 3.5 ^ 0, 3.5 ^ 1, 3.5 ^ 2, 3.5 ^ 3 and 3.5 ^ 4.
     */
    printf("*** Exercise 1: Testing power ***\n");
    test_power(3.5, 0);
    test_power(3.5, 1);
    test_power(3.5, 2);
    test_power(3.5, 3);
    test_power(3.5, 4);
    printf("\n");
}

void test_exercise_2(void) {
    printf("*** Exercise 2: Testing num_digits ***\n");
    /* Test case: num_digits(5) should return 1. */
    test_num_digits(5, 1);

    /* Test case: num_digits(9) should return 1. */
    test_num_digits(9, 1);

    /* Test case: num_digits(10) should return 2. */
    test_num_digits(10, 2);

    /* Test case: num_digits(99) should return 2. */
    test_num_digits(99, 2);

    /* Test case: num_digits(100) should return 3. */
    test_num_digits(100, 3);

    /* Test case: num_digits(999) should return 3. */
    test_num_digits(999, 3);

    /* Test case: num_digits(1000) should return 4. */
    test_num_digits(1000, 4);
    printf("\n");
}

void test_exercise_3(void) {
    printf("*** Exercise 3: Testing occurrences ***\n");
    int x[] = {1, 2, 4, 4, 4, 5, 6, 7, 8, 9, 12};
    int n = sizeof(x) / sizeof(n);

    /* Test case: occurrences(x, n, 1) should return 1. */
    test_occurrences(x, n, 1, 1);

    /* Test case: occurrences(x, n, 2) should return 1. */
    test_occurrences(x, n, 2, 1);

    /* Test case: occurrences(x, n, 4) should return 3. */
    test_occurrences(x, n, 4, 3);

    /* Test case: occurrences(x, n, 12) should return 1. */
    test_occurrences(x, n, 12, 1);

    /* Test case: occurrences(x, n, 3) should return 0. */
    test_occurrences(x, n, 3, 0);
    printf("\n");
}

void test_exercise_4(void) {
    /* Test cases that allow us to verify if power2() correctly calculates 
     * 3.5 ^ 0, 3.5 ^ 1, 3.5 ^ 2, 3.5 ^ 3 and 3.5 ^ 4.
     */
    printf("*** Exercise 4: Testing power2 ***\n");
    test_power2(3.5, 0);
    test_power2(3.5, 1);
    test_power2(3.5, 2);
    test_power2(3.5, 3);
    test_power2(3.5, 4);
    printf("\n");
}

int main(void) {
    printf("SYSC 2006 Winter 2018 Lab 10 Test Harness\n\n");

    test_exercise_1();
    test_exercise_2();
    test_exercise_3();
    test_exercise_4();
}